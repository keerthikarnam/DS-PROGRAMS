	#include<stdio.h>
#include<stdlib.h>
struct node//declaration of struct node//
{
 int data;
    struct node *next;
};
    struct node *front=NULL;
    struct node *rear=NULL;
void enqueue(int x)//function to insert an element in the queue//
{
    struct node*newnode;//declaration of the new struct node//
    newnode=(struct node*)malloc(sizeof(struct node));//dynamic memeory allocation of the newnode//
    newnode->data=x;
    newnode->next=NULL;
    if(rear==NULL)//condition to check if the queue is empty//
    {
        front=rear=newnode;
        rear->next=front;
    }
    else
    {
        rear->next=newnode;
        rear=newnode;
        rear->next=front;
    }
}
void dequeue()//function to delete an element in the queue//
{
    struct node* temp;//declaring a new temproary node of struct type//
    temp=front;
    if((front==NULL)&&(rear==NULL))//condn to check if the queue is empty//
    {
        printf("queue is empty");
    }
    else if(front==rear)
    {
        front=rear=NULL;
        free(temp);
    }
    else
    {
        front=front->next;
        rear->next=front;
        free(temp);
    }
}
void display()//function to display elements in the queue//
{
    struct node *temp;
    temp=front;
    if(front==NULL&&rear==NULL)
    {
        printf("queue is empty");
    }
    else
    {
        printf("element in a queue are:");
        while(temp->next!=front)
        {
            printf("%d \t",temp->data);
            temp=temp->next;
        }
            printf("%d \t",temp->data);
    }
}
int main()
{
    int choice,x;
    while (1)
    {
        printf("1.Insert element to queue \n");//menu of the operations that can be performed in the queue//
        printf("2.Delete element from queue \n");
        printf("3.Display all elements of queue \n");
        printf("4.Quit \n");
        printf("Enter your choice : ");
        scanf("%d", &choice);
        switch (choice)
        {


            case 1:printf("enter the element you want to enter");
            scanf("%d",&x);
            enqueue(x);
        
            break;
            case 2:
            dequeue();
            break;
            case 3:
            display();
            break;
            case 4:
            exit(1);
            default:
            printf("Wrong choice \n");
        } 
    } 
}

